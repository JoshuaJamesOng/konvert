version: 2
jobs:
  build:
      docker:
        - image: runmymind/docker-android-sdk:latest

      working_directory: ~/repo

      environment:
        JVM_OPTS: -Xmx3200m
        TERM: dumb
        GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

      steps:
        - checkout

        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "build.gradle" }}
              - v1-dependencies-

        - run: ./gradlew dependencies

        - save_cache:
            paths:
              - ~/.gradle
            key: v1-dependencies-{{ checksum "build.gradle" }}

        - run: ./gradlew assemble

        - store_artifacts:
            path: app/build/outputs/apk/
            destination: apks/

  test:
      docker:
        - image: runmymind/docker-android-sdk:latest

      working_directory: ~/repo

      environment:
        JVM_OPTS: -Xmx3200m
        TERM: dumb
        GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

      steps:
        - checkout

        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "build.gradle" }}
              - v1-dependencies-

        - run: ./gradlew dependencies

        - save_cache:
            paths:
              - ~/.gradle
            key: v1-dependencies-{{ checksum "build.gradle" }}

        - run: ./gradlew check

        - store_artifacts:
            path: app/build/reports
            destination: reports/

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test

